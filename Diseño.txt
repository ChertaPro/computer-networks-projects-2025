Diseño y planificación técnica

Entregables de la fase global (definidos y verificables):

Especificación del protocolo (documento protocol_spec.md con offsets, tipos, tamaños).

PoC CLI (script Python) que envía/recibe mensajes en LAN.

Módulo de transferencia de archivos (chunking + ACKs).

Scripts y/o Dockerfile para pruebas en contenedores (macvlan).

Documentación final (memoria técnica + manual de usuario + PPT de defensa).

Estructura de tareas (descomposición):

T1: Preparación del entorno y pruebas previas (identificar interfaz, permisos, ip link y tcpdump).

T2: Definición formal de la trama (version, type, seq, length, crc); redactar protocol_spec.md.

T3: Implementación base (raw socket wrapper, build/parse payload).

T4: Handlers: MSG, DISCOVER, FILE_INIT, FILE_CHUNK, FILE_END, ACK.

T5: CLI con modos: listen, send-msg, discover, send-file.

T6: Tests locales (dos VMs/conteneres). Automatizar pruebas básicas (scripts).

T7: Mejoras (windowing, discovery persistente, broadcast).

T8: GUI (Tkinter) y seguridad (HMAC o pedir permiso para pycryptodome).

T9: Documentación, plan de pruebas y demo scripts.

Dependencias entre tareas: T2 → T3 → T4 → T5 → T6 → T7/T8 → T9. (cada paso depende del anterior para probar incrementalmente)

Criterios de aceptación por entregable:

PoC CLI: enviar texto entre dos nodos en la misma LAN comprobable con tcpdump -i <iface> -e y recepción correcta en el receptor.

Transferencia de archivo: receptor guarda archivo y SHA-256 coincide con el enviado.

Docker: dos contenedores pueden intercambiar mensajes con MACs distintas usando macvlan; se documenta el procedimiento exacto.
